// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WEB_API_1_Paskaita.DataBase;

#nullable disable

namespace WEB_API_1_Paskaita.Migrations
{
    [DbContext(typeof(AplicationDbContext))]
    [Migration("20240718182909_ContactConfiguration")]
    partial class ContactConfiguration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WEB_API_1_Paskaita.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Company")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Mail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Note")
                        .HasMaxLength(8000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Contacts", (string)null);
                });

            modelBuilder.Entity("WEB_API_1_Paskaita.Models.SafetyCar", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SafetyCars", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Aston Martin",
                            Color = "Green Metalic",
                            Model = "Vantage"
                        },
                        new
                        {
                            Id = 2,
                            Brand = "Mercedes-Benz",
                            Color = "Black",
                            Model = "AMG GT Black Series"
                        },
                        new
                        {
                            Id = 3,
                            Brand = "Mercedes-Benz",
                            Color = "Silver",
                            Model = "AMG GT R"
                        },
                        new
                        {
                            Id = 4,
                            Brand = "Lamborghini",
                            Color = "Red",
                            Model = "Diablo"
                        });
                });

            modelBuilder.Entity("WEB_API_1_Paskaita.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("3f865fb7-a366-44ad-ab17-b8df12bf29a0"),
                            City = "New York",
                            CreationDateTime = new DateTime(2024, 7, 18, 18, 29, 9, 78, DateTimeKind.Utc).AddTicks(2114),
                            Email = "johndoe@example.com",
                            UserName = "JohnDoe"
                        },
                        new
                        {
                            Id = new Guid("00ebb7a2-3dd1-4987-a473-1f2b34fad56e"),
                            City = "Los Angeles",
                            CreationDateTime = new DateTime(2024, 7, 18, 18, 29, 9, 78, DateTimeKind.Utc).AddTicks(2134),
                            Email = "janedoe@example.com",
                            UserName = "JaneDoe"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
